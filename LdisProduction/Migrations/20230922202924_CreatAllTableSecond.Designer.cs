// <auto-generated />
using System;
using LdisProduction.DbContextApplication;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LdisProduction.Migrations
{
    [DbContext(typeof(DbContextApplications))]
    [Migration("20230922202924_CreatAllTableSecond")]
    partial class CreatAllTableSecond
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("ChatMessage", b =>
                {
                    b.Property<int>("ChatIdId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MessageIdId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChatIdId", "MessageIdId");

                    b.HasIndex("MessageIdId");

                    b.ToTable("ChatMessage");
                });

            modelBuilder.Entity("ChatUser", b =>
                {
                    b.Property<int>("ChatIdId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserIdId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChatIdId", "UserIdId");

                    b.HasIndex("UserIdId");

                    b.ToTable("ChatUser");
                });

            modelBuilder.Entity("LdisProduction.Models.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Actual")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChatName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("LdisProduction.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Actual")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateSend")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("LdisProduction.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Actual")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MessageUser", b =>
                {
                    b.Property<int>("MessageIdId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserIdId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MessageIdId", "UserIdId");

                    b.HasIndex("UserIdId");

                    b.ToTable("MessageUser");
                });

            modelBuilder.Entity("ChatMessage", b =>
                {
                    b.HasOne("LdisProduction.Models.Chat", null)
                        .WithMany()
                        .HasForeignKey("ChatIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LdisProduction.Models.Message", null)
                        .WithMany()
                        .HasForeignKey("MessageIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ChatUser", b =>
                {
                    b.HasOne("LdisProduction.Models.Chat", null)
                        .WithMany()
                        .HasForeignKey("ChatIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LdisProduction.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MessageUser", b =>
                {
                    b.HasOne("LdisProduction.Models.Message", null)
                        .WithMany()
                        .HasForeignKey("MessageIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LdisProduction.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
